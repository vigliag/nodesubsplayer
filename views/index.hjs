<!DOCTYPE HTML>
<html>
<head>
    <title>BrowserLangPlayer</title>
	
	<link rel="stylesheet" href="projekktor/theme/maccaco/projekktor.style.css" type="text/css" media="screen" />
	<link rel="stylesheet" href="http://yui.yahooapis.com/pure/0.3.0/pure-min.css">
	
    <style type="text/css">
	html{
		font-size: 75%;
	}
	#subs {
		font-family: sans-serif;
		font-size: 1.5em;
	}
	#dictIframe {
		width: 100%;
		height:500px;
	}
	#container {
		width: 95%;
		margin: 0 auto;
		overflow: hidden;
	}
	#main {
		width:auto;
		margin: 0;
		overflow: hidden;
	}
	#side {
		box-sizing: border-box;
		padding-left: 0.7em;
		width: 470px;
		float:right;
		overflow-x:hidden;
	}
    </style>

    <script type="text/javascript" src="projekktor/jquery-1.7.2.min.js"></script>
	<script type="text/javascript" src="html5-ass-subtitles-master/assparser_utils.js"></script>
	<script type="text/javascript" src="html5-ass-subtitles-master/assparser.js"></script>

    <script type="text/javascript" src="projekktor/projekktor-1.2.38r332.min.js"></script>

</head>
<body>
	<div id="container">
	<div id="side">
			<p> In riproduzione {{localfilepath}}, sottotitoli: {{subname}} </p>
			<input type="checkbox" id="vlcsubsbox"><label for="vlcsubsbox">Sottotitoli di Vlc</label>
			<iframe id="dictIframe" src="http://mini.wordreference.com/mini/index.aspx?dict=enit&w=start&u=1" name="WRmini"></iframe>
			<h3>Cronologia</h3>
			<ul id="history">
			</ul>
	</div>
	<div id="main">
			<div id="player_a" class="projekktor" style="width: 100%;"></div>
			<p id="subs">Qui sottotitoli</p>
	</div>
	</div>
</body>
	<script type="text/javascript">
	jQuery(document).ready(function($) {
	
		
		var videosrc = "{{localfilepath}}";
		vlc = null;
		currentVlcSubTrack = 0;
		
		function startPlayer(videosrc, videotype, cues){
			console.log(cues);
			projekktor('#player_a', {
				poster: 'http://www.projekktor.com/wp-content/manual/intro.png',
				playerFlashMP4: 'http://www.projekktor.com/wp-content/manual/jarisplayer.swf',
				playerFlashMP3: 'http://www.projekktor.com/wp-content/manual/jarisplayer.swf',		
				useYTIframeAPI: false,
				platforms: ['browser', 'android', 'ios', 'vlc', 'native', 'flash'],
				ratio: 16/9,
				controls: true,
				playlist: [
				{
					0: {src:videosrc, type: videotype},
					cuepoints: cues
				}
				] 
			}, function(player) {
				player.addListener('displayReady', function(val, ref) {
			
					vlc = document.getElementById("player_a_media_vlc");
					window.setTimeout(function(){
						currentVlcSubTrack = vlc.subtitle.count;
						console.log("traccia sottotitoli default: " + currentVlcSubTrack);
						deactivateVlcSubs();
						
						$('#vlcsubsbox').on("change", function(){
						if($(this).is(":checked")) {
							activateVlcSubs();
						} else {
							deactivateVlcSubs();
						}
						});
						
						player.addListener('fullscreen', function(fullScreen){
						console.log(fullScreen);
						if(fullScreen){
							activateVlcSubs();
						} else {
							deactivateVlcSubs();
						}
						});
						
					},1000);
					
				});
				
			});
		}
		
		function activateVlcSubs () {
			window.setTimeout(function(){
				console.log("attivo sub di vlc");
				eval("vlc.subtitle.track = currentVlcSubTrack");
			},3000);
		}
		
		function deactivateVlcSubs(){
			window.setTimeout(function(){
				console.log("disattivo sub di vlc");
				eval("vlc.subtitle.track = -1");
			},3000);
		}
		
		var subUrl = "{{subtitleurl}}";
		var baseUrl = "http://mini.wordreference.com/mini/index.aspx?dict=enit&w=";
		
		function displayLine(obj){
			$("#subs").html(obj.value.replace(/\b(\w+?)\b/g, '<span class="word">$1</span>'));
			console.log(obj);
		}
		
		function searchWord(word){
			console.log("ricerco " + word);
			$("#dictIframe")[0].src = baseUrl + word;
		}
		
		$( document ).on( "click", ".word", function() {
			var word = this.innerHTML;
			searchWord(word);
			$("#history").append("<li>"+word+"</li>");
		});
		
		$( document ).on( "click", ".history-elem", function() {
			var word = this.innerHTML;
			searchWord(word);
		});
		
		
		
		$.get(subUrl, function(res){
			parseASS(res);
			var cuepoints = [];
			captions.lines.forEach(function(line){
				var onseconds= line.start;
				var offseconds= line.end;
				cuepoints.push({
					on: Math.floor(onseconds/60) + ":" + onseconds%60,
					off: Math.floor(offseconds/60) + ":" + offseconds%60,
					value: line.text,
					style: line.style,
					callback: displayLine
				});
			});
			startPlayer(videosrc, 'video/matroska', cuepoints);
		}) ;
	})
	</script>
